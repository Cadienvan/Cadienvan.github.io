---
interface Props {
  title: string;
  description?: string;
  hasGoBack?: boolean;
  lang?: string;
}

declare global {
  interface Window {
    dataLayer: any[];
  }
}

const { title, description = "Il mio sito web.", hasGoBack = false, lang = "it" } = Astro.props;

const i18n = {
  it: {
    goBack: "Torna alla home",
  },
  en: {
    goBack: "Go back to home",
  },
};

import "nes.css/css/nes.min.css";
import CookieBanner from "../components/CookieBanner.astro";
---

<!doctype html>
<html lang={lang}>
  <head>
    <meta charset='UTF-8' />
    <meta name='description' content={description} />
    <meta name='viewport' content='width=device-width' />
    <link rel='apple-touch-icon' sizes='180x180' href='/apple-touch-icon.png' />
    <link rel='icon' type='image/png' sizes='32x32' href='/favicon-32x32.png' />
    <link rel='icon' type='image/png' sizes='16x16' href='/favicon-16x16.png' />
    <link rel='manifest' href='/site.webmanifest' />
    <link rel='mask-icon' href='/safari-pinned-tab.svg' color='#5bbad5' />
    <link rel='alternate' type='application/rss+xml' title='RSS Feed - Michael Di Prisco' href={new URL("feed.xml", Astro.site)} />
    <meta name='msapplication-TileColor' content='#da532c' />
    <meta name='theme-color' content='#ffffff' />
    <meta name='generator' content={Astro.generator} />
    <title>{title} - Michael Di Prisco</title>
  </head>
  <body>
    <CookieBanner />
    <main>
      <slot />
      {
        hasGoBack && (
          <section>
            <a href='/' class='nes-btn is-primary'>
              <span>{i18n[lang].goBack}</span>
            </a>
          </section>
        )
      }
    </main>
    <script>
      const i18n = {
        it: {
          copyButtonLabel: "Copia",
          copyButtonLabelOk: "Copiato!",
          copyButtonLabelError: "Errore!",
        },
        en: {
          copyButtonLabel: "Copy",
          copyButtonLabelOk: "Copied!",
          copyButtonLabelError: "Error!",
        },
      };

      let copyButtonLabel = i18n[document.documentElement.lang].copyButtonLabel;
      let codeBlocks = Array.from(document.querySelectorAll("pre"));

      for (let codeBlock of codeBlocks) {
        let wrapper = document.createElement("div");
        wrapper.style.position = "relative";

        let copyButton = document.createElement("button");
        copyButton.className = "copy-code nes-btn is-primary";
        copyButton.innerHTML = copyButtonLabel;

        codeBlock.setAttribute("tabindex", "0");
        codeBlock.appendChild(copyButton);
        // wrap codebock with relative parent element
        codeBlock.parentNode.insertBefore(wrapper, codeBlock);
        wrapper.appendChild(codeBlock);

        copyButton.addEventListener("click", async () => {
          try {
            await navigator.clipboard.writeText(codeBlock.querySelector("code").innerText);
            copyButton.innerHTML = i18n[document.documentElement.lang].copyButtonLabelOk;
            setTimeout(() => {
              copyButton.innerHTML = copyButtonLabel;
            }, 2000);
          } catch (err) {
            console.error("Failed to copy: ", err);
            copyButton.innerHTML = i18n[document.documentElement.lang].copyButtonLabelError;
            setTimeout(() => {
              copyButton.innerHTML = copyButtonLabel;
            }, 5000);
          }
        });
      }
    </script>
  </body>
</html>
<style is:global>
  @font-face {
    font-family: "PressStart2P-Regular";
    src: url("/fonts/PressStart2P-Regular.ttf") format("truetype");
    font-weight: normal;
    font-style: normal;
    font-display: swap;
  }

  * {
    font-family: "PressStart2P-Regular", sans-serif;
  }

  main {
    margin: auto;
    padding: 1rem;
    max-width: calc(100% - 2rem);
    font-size: 20px;
    line-height: 1.6;
  }

  main > section {
    margin-bottom: 3rem;
  }

  h2 > a {
    margin-right: 1rem;
  }

  h2 > a > img {
    margin-left: 0;
    transition: margin-left 0.2s ease-in-out;
  }

  h2 > a > span {
    margin-left: 1rem;
  }

  h2 > a:has(img):hover img {
    margin-left: 10px;
  }

  a,
  .nes-text.is-primary {
    color: #005099;
  }

  .message {
    display: flex;
    flex-direction: row;
    align-items: center;
  }

  .message img {
    margin-right: 1rem;
    flex: 1;
    align-self: end;
    max-width: 100%;
    width: auto;
  }

  .message .nes-balloon {
    flex: 2;
  }

  .article-link > .title span {
    margin-left: 1rem;
  }

  .default-font * {
    font-family:
      system-ui,
      -apple-system,
      BlinkMacSystemFont,
      "Segoe UI",
      Roboto,
      Oxygen,
      Ubuntu,
      Cantarell,
      "Open Sans",
      "Helvetica Neue",
      sans-serif;
  }

  blockquote {
    border-left: 4px solid #005099;
    padding-left: 1rem;
    margin-left: 0;

    & p {
      margin: 0;
    }
  }

  code {
    font-family:
      SFMono-Regular,
      Menlo,
      Monaco,
      Consolas,
      Liberation Mono,
      Courier New,
      monospace !important;
    background-color: #24292e;
    color: #e1e4e8;
  }

  pre {
    padding: 0.5rem 1rem;
  }

  #search-container {
    & .nes-list {
      padding-left: 0;

      & li {
        margin-bottom: 0.5rem;

        &:last-child {
          text-align: right;
        }
      }
    }
  }

  .copy-code {
    position: absolute;
    top: 0;
    right: 0;
    padding-top: 0;
    padding-bottom: 0;
    /*background-color: #3730a3;
    padding: 0.25rem 0.5rem;
    font-size: 0.75rem;
    line-height: 1rem;*/
  }

  /*.copy-code:hover {
    background-color: #312e81;
  }*/

  [data-tooltip] {
    position: relative;
    border-bottom: 1px dashed #000;
    cursor: help;
  }

  [data-tooltip]::after {
    width: 0;
    position: absolute;
    opacity: 0;
    pointer-events: none;
    content: attr(data-tooltip);
    left: 0;
    top: calc(100% + 10px);
    border-radius: 3px;
    box-shadow: 0 0 5px 2px rgba(100, 100, 100, 0.6);
    background-color: white;
    z-index: 10;
    padding: 8px;
    transform: translateY(-20px);
    transition: all 150ms cubic-bezier(0.25, 0.8, 0.25, 1);
  }

  [data-tooltip]:hover::after,
  [data-tooltip]:focus::after,
  [data-tooltip]:active::after {
    width: 300px;
    opacity: 1;
    transform: translateY(0);
    transition-duration: 300ms;
  }

  [data-ai-support-amount="high"] [data-tooltip]:after {
    content: "Supporto autonomo: redazione tramite prompt engineering.";
  }
  [data-ai-support-amount="mid"] [data-tooltip]:after {
    content: "Supporto collaborativo: redazione di alcuni paragrafi sotto revisione.";
  }
  [data-ai-support-amount="low"] [data-tooltip]:after {
    content: "Supporto limitato: revisione di alcune frasi e paragrafi.";
  }

  [lang="en"] [data-ai-support-amount="high"] [data-tooltip]:after {
    content: "Autonomous support: drafting through prompt engineering.";
  }
  [lang="en"] [data-ai-support-amount="mid"] [data-tooltip]:after {
    content: "Collaborative support: drafting of some paragraphs under review.";
  }
  [lang="en"] [data-ai-support-amount="low"] [data-tooltip]:after {
    content: "Limited support: review of some sentences and paragraphs.";
  }

  @media (max-width: 1023px) {
    [data-tooltip]::after {
      top: 0;
      position: fixed;
      left: 0;
      width: 100% !important;
    }
  }

  /* MOBILE ONLY */
  @media (max-width: 600px) {
    main {
      font-size: 14px;
    }
    h2 {
      font-size: 1.2em;
    }
  }
</style>
